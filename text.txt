SpaCy
====== English ======

import spacy

nlp = spacy.load("en_core_web_sm")

doc = nlp("Is there a bus departure from London to Paris tomorrow?")

source = None
destination = None
schedule = None

for token in doc:
    if token.dep_ == "ROOT":
        for child in token.children:
            if child.dep_ == "nsubj":
                source = child.text
            elif child.dep_ == "dobj":
                destination = child.text
            elif child.dep_ == "pobj" and child.head.dep_ == "prep":
                schedule = child.text
            elif child.dep_ == "prep" and child.text == "from":
                source = doc[token.i + 1].text

if source is None:
    for token in doc:
        if token.dep_ == "pobj" and token.head.dep_ == "prep":
            source = token.text

print(f"Source: {source}")
print(f"Destination: {destination}")
print(f"Schedule: {schedule}")



====== French ======

import spacy

nlp = spacy.load("fr_core_news_sm")
doc = nlp("Je vais peut-être aller à Paris dimanche prochain depuis New York. Y a-t-il un voyage pour moi ?")

source = ""
destination = ""
schedule = ""

for ent in doc.ents:
    if ent.label_ == "LOC":
        if not source:
            source = ent.text
        elif not destination:
            destination = ent.text
    elif ent.label_ == "DATE":
        schedule = ent.text

print(f"Source: {source}")
print(f"Destination: {destination}")
print(f"Schedule: {schedule}")

===== Transcription ENGLISH =====

import moviepy.editor as mp
import speech_recognition as sr

r = sr.Recognizer()

audio_file = mp.AudioFileClip("path/to/audio/file.ogv")
audio_file.write_audiofile("path/to/audio/file.wav")

with sr.AudioFile("path/to/audio/file.wav") as source:
    audio = r.record(source)

text = r.recognize_sphinx(audio)

print(text)

===== Transcription FRENCH =====

import moviepy.editor as mp
import speech_recognition as sr

r = sr.Recognizer()

audio_file = mp.AudioFileClip("path/to/audio/file.ogv")
audio_file.write_audiofile("path/to/audio/file.wav")

with sr.AudioFile("path/to/audio/file.wav") as source:
    audio = r.record(source)

text = r.recognize_sphinx(audio, language="fr-FR")

print(text)